#!/bin/bash

drbdstate='/proc/drbd'
#drbdstate='drbd.log'
fullspeed='65M'
minspeed='2M'
maxspeed_count=1
drbd_command='/sbin/drbdsetup'
#drbd_command='echo'

function get-info {
   cat $drbdstate | sed 's/finish/\n\tfinish/' | awk --use-lc-numeric -v fullspeed=$fullspeed -v minspeed=$minspeed -v maxspeed_count=$maxspeed_count '
   function convert(value,dest) {
      t=value
      if (value~"[0-9\\.,]+K") gsub("K|K//sec","",value)
      if (value~"[0-9\\.,]+M") {
         gsub("M|M//sec","",value)
         value=value*M
      }
      if (value~"[0-9\\.,]+G") {
         gsub("G|G//sec","",value)
         value=value*G
      }
      value=value/dest
      return value
   }
   function call_drbd(disk,speed) {
      system("'$drbd_command' /dev/drbd" disk " syncer -r " speed "K")
   }
   BEGIN {
      K=1
      M=1024*K
      G=1024*M
      n=0
   } /^[ 0-9]+:[ \t]+cs:SyncSource/ {
      #print $0
      col=split($0,str,"[ :]")
      j=0
      for (i=0; i<=col; i++) if (str[i]!="") {
         #print str[i]
         j++
         if (j==1) {
            n++
            name[n]=str[i]
            #print name[n]
         } 
      }
   } / sync.ed:[ \t]+[0-9\.]+%/ {
      split($4,size,"[()/]")
      #printf("%s %s%s\n",name[n],size[3],size[4])
      total_comp_size=total_comp_size+convert(size[2] size[4],K)
      total_size=total_size+convert(size[3] size[4],K)
      ksize=convert(size[3] size[4],K)
      size_t[ksize]++
      sizes[ksize][size_t[ksize]]=name[n]
   } /finish: [0-9:]{3}+/ {
      #printf("whith speed %s %s\n",$(NF-1),$(NF))
      total_speed=total_speed+convert($(NF-1) $(NF),K)
   } END {
      for (s in sizes) {
	sorted_sizes=sorted_sizes"\n"s
      }
      i=0
      while("echo \"" sorted_sizes " \"|sort -n"| getline a) {
          sizes_sorted[i]=int(a)
	  #print sizes_sorted[i]
          i++
      }
      #for (j=1;j< length(sizes_sorted);j++) { print j "\"" sizes_sorted[j] "\""}
      if ( n <= maxspeed_count ) {
         # delete
         k=0
         for (j=1;j< length(sizes_sorted);j++) {
	   s=sizes_sorted[j]
	   #print sizes_sorted[j]
           for (i in sizes[s]) {
              k++
              name_p=sizes[s][i]
              speed_p=convert(convert(fullspeed,K)/n,K)
              #printf("%s %iK\n",name_p, speed_p)
              call_drbd(name_p,speed_p)
            }
         }
      } else {
         k=0
         for (j=1;j<length(sizes_sorted);j++)  {
	 s=sizes_sorted[j]
           for (i in sizes[s]) {
             #print convert(s "K",G), s
             k++
             name_p=sizes[s][i]
             if (k<=maxspeed_count) {
               speed_p=convert((convert(fullspeed,K)-(n-maxspeed_count)*convert(minspeed,K))/maxspeed_count,K)
               #printf("%s %iK\n",name_p,speed_p)
               call_drbd(name_p,speed_p)
             } else {
               speed_p=convert(minspeed,K)
               #printf("%s %iK\n",name_p, speed_p)
               call_drbd(name_p,speed_p)
             }
           }
         }
      }
   }'
}
#cat $drbdstate
get-info |>/dev/null 2>/dev/null
#| while read i; do
#   echo /sbin/drbdsetup /dev/drbd$(echo $i|awk '{print $1}') syncer -r $(echo $i| awk '{print $2}')
#done 
